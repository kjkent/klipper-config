# Adapted from: https://github.com/dudeofawesome/klipper-config/blob/master/macros/print_start.cfg
[gcode_macro START_PRINT]
description:
  G-code to run at the start of a print.
  Replace your slicer's start G-code with:
  Orca: START_PRINT EXTRUDER_TEMP={first_layer_temperature[initial_extruder]} BED_TEMP={first_layer_bed_temperature[initial_extruder]} RELATIVE_E_MODE={use_relative_e_distances}
  Cura: START_PRINT EXTRUDER_TEMP={material_print_temperature_layer_0} BED_TEMP={material_bed_temperature_layer_0} RELATIVE_E_MODE={relative_extrusion}
gcode:
  {% set hotend_temp = params.EXTRUDER_TEMP|default(200)|float %}
  {% set bed_temp = params.BED_TEMP|default(60)|float %}
  {% set relative_extruder = params.RELATIVE_E_MODE|default('false')|string %}
  {% set mesh_requested = params.MESH|default('true')|string %}
  POWER_ON ;ensure the printer is on
  G90 ;Absolute positioning
  M220 S100 ;Reset feedrate
  M221 S100 ;Reset flowrate
  {% if relative_extruder|lower == 'true' %}
    M83 ;Set extruder to relative mode
  {% else %}
    M82 ;Set extruder to absolute mode
  {% endif %}

  G28 ;Home

  {% if mesh_requested|lower == 'true' %}
    BED_MESH_CALIBRATE ADAPTIVE=1
  {% endif %}

  M140 S{bed_temp} ;Start heating bed
  M104 S{hotend_temp * 0.75} ;Start heating extruder

  M190 S{bed_temp} ;Wait for bed to reach temp target
  M109 S{hotend_temp} ;Finish heating extruder
  
  NOZZLE_PRIME_LINE

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  ; Just in case the above didn't work, let's do it another way
  M104 S0 ; Extruder
  M140 S0 ; Bed
  CANCEL_PRINT_BASE
  POWER_OFF

[gcode_macro SAFE_PARK]
# adapted from:
# https://github.com/dudeofawesome/klipper-config/blob/35f9022246322c5e31bff8b99a4ec3ef67c6c153/macros/safe_park.cfg
description:
  Park the print head in a safe location
  @param {float} [X=10]          - Where to park the X axis
  @param {float} [Y=200]         - Where to park the Y axis
  @param {bool}  [Z_MOVE=true]   - Whether to move the Z axis.
  @param {bool}  [RETRACT=false] - Whether to retract.
gcode:
  SAVE_GCODE_STATE NAME=safe_park

  {% set param_z_move = params.Z_MOVE|default('true')|string %}
  {% set param_retract = params.RETRACT|default('true')|string %}

  RESPOND PREFIX=SAFE_PARK MSG="z move:  {param_z_move}"
  RESPOND PREFIX=SAFE_PARK MSG="retract: {param_retract}"

  G90 ;Use absolute coordinates
  
  # move z if requested
  {% if param_z_move|lower == 'true' %}
    
    # calculate safe z position
    {% set z_lift = 20|float %}
    {% set z_pos = printer.toolhead.position.z|float %}
    {% set z_max = printer.toolhead.axis_maximum.z|default(200)|float %}
    {% set z_park = z_pos + z_lift if z_pos + z_lift < z_max else z_max|float %}
    
    RESPOND PREFIX=SAFE_PARK MSG="z_lift:  {z_lift}"
    RESPOND PREFIX=SAFE_PARK MSG="z_pos: {z_pos}"
    RESPOND PREFIX=SAFE_PARK MSG="z_max: {z_max}"
    RESPOND PREFIX=SAFE_PARK MSG="z_park: {z_park}"

    G1 Z{z_park} F900 ; park z
  {% endif %}

  # set park positon for x and y
  {% set x_park = params.X|default(printer.toolhead.axis_minimum.x + 10)|float %}
  {% set y_park = params.Y|default(printer.toolhead.axis_maximum.y - 10)|float %}
  RESPOND PREFIX=SAFE_PARK MSG="x_park: {x_park}"
  RESPOND PREFIX=SAFE_PARK MSG="y_park: {y_park}"
  G1 X{x_park} Y{y_park} F3000 ; park x and y
  
  # retract if requested
  {% if param_retract|lower == 'true' and printer.extruder.can_extrude|lower == 'true' %}
    {% set retract_len = 4|float %}
    RESPOND PREFIX=SAFE_PARK MSG="retract_len: {retract_len}"

    M83 ; relative extrusion
    G1 E-{retract_len} F3000 ; retract
  {% endif %}

  RESTORE_GCODE_STATE NAME=safe_park

[gcode_macro END_PRINT]
gcode:
  TURN_OFF_HEATERS
  SAFE_PARK
  M400 ; ensure safe_park moves are complete
  POWER_OFF_WHEN_COOL

[gcode_macro PRINT_START]
gcode:
  START_PRINT {rawparams}

[gcode_macro PRINT_END]
gcode:
  END_PRINT {rawparams}

[gcode_macro NOZZLE_PRIME_LINE]
# adapted from https://github.com/dudeofawesome/klipper-config/blob/35f9022246322c5e31bff8b99a4ec3ef67c6c153/macros/nozzle_prime.cfg
description:
  Prime the nozzle by laying a strip of plastic along the left side of the bed
gcode:
  SAVE_GCODE_STATE NAME=nozzle_prime_state

  {% set pi = 3.1415926536|float %}
  {% set fw_retraction_set = printer.configfile.settings.firmware_retraction is defined %}
  {% set retract_len = printer.configfile.settings.firmware_retraction.retract_length if fw_retraction_set else 4|float %}

  {% set nozzle_diam = printer.configfile.settings.extruder.nozzle_diameter|float %}
  # TODO: try reading the filament diameter from a sensor
  {% set filament_diam = printer.configfile.settings.extruder.filament_diameter|float %}
  {% set layer_height = 0.28|float %}
  {% set line_width = nozzle_diam * 1.75|float %}
  {% set x_start = 5|float %}
  {% set x_end = x_start + line_width|float %}
  {% set y_start = 5|float %}
  {% set y_end = printer.toolhead.axis_maximum.y - 10|float %}
  {% set y_diff = y_end - y_start|float %}
  {% set extrude_cross_section_area = (pi * ((layer_height / 2) ** 2)) + ((line_width - layer_height) * layer_height)|float %}
  {% set extrude_vol = y_diff * extrude_cross_section_area|float %}
  # TODO: figure out why my E math is wrong.
  # I'd expect E-vals to be 15, but I'm getting ~8.38
  {% set extrude_len = (extrude_vol * 1.75) / (pi * (filament_diam / 2) ** 2)|float %}
  ##### end of definitions #####

  G90 ;Absolute positionning
  M82 ;Absolute extrusion
  G92 E0 ;Reset extruder

  G1 Z5.0 F3000 ;Move Z axis up

  # TODO: consider priming along the front of the bed
  G1 X{x_start} Y{y_start} F5000.0 ;Move tool to XY pos
  G1 Z{layer_height} F5000.0 ;Move tool down
  G1 X{x_start} Y{y_end} Z{layer_height} F1500.0 E{extrude_len} ;Start priming wipe
  G1 X{x_end} Y{y_end} Z{layer_height} F5000.0
  G1 X{x_end} Y{y_start} Z{layer_height} F1500.0 E{extrude_len * 2} ;Finish priming wipe

  G1 Z5.0 E{(extrude_len * 2) - retract_len} F3000 ;Move Z axis up & retract
  G92 E0 ;Reset extruder

  RESTORE_GCODE_STATE NAME=nozzle_prime_state
